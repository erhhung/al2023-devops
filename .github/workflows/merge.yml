# https://docs.docker.com/build/ci/github-actions/multi-platform/
name: Merge Image Manifests

on:
  # https://docs.github.com/en/actions/writing-workflows/choosing-when-your-workflow-runs/events-that-trigger-workflows#workflow_call
  workflow_call:
    inputs:
      image-labels:
        type: string
        description: Labels for the image (K=V per line)
        required: false
        default: ''

jobs:
  merge:
    runs-on: ubuntu-latest
    steps:
      # https://github.com/actions/download-artifact
      - name: Download Digests
        id: download
        uses: actions/download-artifact@v4
        with:
          path: /tmp/digests
          pattern: digests-*
          merge-multiple: true

      # https://github.com/crazy-max/ghaction-setup-docker
      - name: Set up Docker Daemon
        id: docker
        uses: crazy-max/ghaction-setup-docker@v3

      # https://github.com/docker/setup-buildx-action
      - name: Set up Docker BuildX
        id: buildx
        uses: docker/setup-buildx-action@v3

      # https://github.com/docker/metadata-action
      - name: Extract Metadata for Docker
        id: metadata
        uses: docker/metadata-action@v5
        with:
          images: |-
            docker.io/${{ github.repository }}
              ghcr.io/${{ github.repository }}
          labels: ${{ inputs.image-labels }}

      # https://github.com/docker/login-action
      - name: Log in to Docker Hub
        id: docker-hub
        uses: docker/login-action@v3
        with:
          registry: docker.io
          username:    ${{ vars.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      # https://github.com/docker/login-action
      - name: Log in to GitHub GHCR
        id: ghcr
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ github.token }}

      - name: Create Manifests and Push
        id: manifests
        working-directory: /tmp/digests
        run: |-
          tags=($(jq -cr '[.tags[] | "-t \(.)"] | join(" ")' <<< "$DOCKER_METADATA_OUTPUT_JSON"))
          images=($(printf '${{ github.repository }}@sha256:%s ' *))
          docker buildx imagetools create "${tags[@]}" "${images[@]}"

      # confirm merged image manifests
      - name: Inspect Image Manifests
        id: inspect
        run: |-
          tags=($(jq -cr '.tags[] | select(. | endswith(":latest") | not)' <<< "$DOCKER_METADATA_OUTPUT_JSON"))
          for tag in "${tags[@]}"; do
            docker buildx imagetools inspect $tag
            echo
          done
