# https://docs.docker.com/build/ci/github-actions/multi-platform/
name: Build

on:
  # https://docs.github.com/en/actions/writing-workflows/choosing-when-your-workflow-runs/events-that-trigger-workflows#workflow_call
  workflow_call:
    inputs:
      platform:
        type: string
        description: Platform to build for
        required: true
      runs-on:
        type: string
        description: Labels for the runner (array JSON)
        required: false
        default: '["ubuntu-latest"]'
      image-labels:
        type: string
        description: Labels for the image (K=V per line)
        required: false
        default: ''

jobs:
  build:
    runs-on: ${{ fromJSON(inputs.runs-on) }}
    steps:
      # https://github.com/actions/checkout
      - name: Check out Source Code
        id: checkout
        uses: actions/checkout@v4

      - name: Set Environment Variables
        id: env
        run: |
          platform=${{ inputs.platform }}
          cat <<EOF >> $GITHUB_ENV
          PLATFORM_PAIR=${platform//\//-}
          EOF

      # https://github.com/crazy-max/ghaction-setup-docker
      - name: Set up Docker Daemon
        id: docker
        uses: crazy-max/ghaction-setup-docker@v3

      # https://github.com/docker/setup-qemu-action
      - name: Set up QEMU Emulator
        id: qemu
        uses: docker/setup-qemu-action@v3
        with:
          platforms: ${{ inputs.platform }}

      # https://github.com/docker/setup-buildx-action
      - name: Set up Docker BuildX
        id: buildx
        uses: docker/setup-buildx-action@v3
        with:
          version: latest
          platforms: ${{ inputs.platform }}
          buildkitd-flags: >-
            --allow-insecure-entitlement security.insecure
            --allow-insecure-entitlement network.host

      # https://github.com/docker/metadata-action
      - name: Extract Metadata for Docker
        id: metadata
        uses: docker/metadata-action@v5
        with:
          images: |-
            docker.io/${{ github.repository }}
            ghcr.io/${{ github.repository }}
          labels: ${{ inputs.image-labels }}

      # https://github.com/aws-actions/configure-aws-credentials
      - name: Configure AWS Credentials
        id: aws
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: us-east-1
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      # https://github.com/aws-actions/amazon-ecr-login
      - name: Log in to ECR Public
        id: ecr
        uses: aws-actions/amazon-ecr-login@v2
        with:
          registry-type: public

      # https://github.com/docker/login-action
      - name: Log in to Docker Hub
        id: docker-hub
        uses: docker/login-action@v3
        with:
          registry: docker.io
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      # https://github.com/docker/login-action
      - name: Log in to GitHub GHCR
        id: ghcr
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ github.token }}

      # https://github.com/docker/build-push-action
      - name: Build and Push by Digest
        id: build
        uses: docker/build-push-action@v6
        env:
          BUILDKIT_PROGRESS: plain
        with:
          platforms: ${{ inputs.platform }}
          tags: ${{ steps.metadata.outputs.tags }}
          labels: ${{ steps.metadata.outputs.labels }}
          cache-from: type=gha,scope=${{ github.repository }}:${{ github.ref_name }}-${{ env.PLATFORM_PAIR }}
          cache-to:   type=gha,scope=${{ github.repository }}:${{ github.ref_name }}-${{ env.PLATFORM_PAIR }},mode=max
          outputs: type=image,name=${{ github.repository }},push-by-digest=true,name-canonical=true,push=true

      # create 0-byte file named /tmp/digests/<digest>
      - name: Export Digest
        id: export
        run: |
          digest="${{ steps.build.outputs.digest }}"
          [ "$digest" ] || exit 1
          mkdir -p /tmp/digests
          touch "/tmp/digests/${digest#sha256:}"

      # https://github.com/actions/upload-artifact
      - name: Upload Digest
        id: upload
        uses: actions/upload-artifact@v4
        with:
          name: digests-${{ env.PLATFORM_PAIR }}
          path: /tmp/digests/*
          if-no-files-found: error
          retention-days: 1
